<Page
    x:Class="AddonWars2.App.Views.InstallAddonsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:local="clr-namespace:AddonWars2.App.Views"
    xmlns:vm="clr-namespace:AddonWars2.App.ViewModels"
    xmlns:cmd="clr-namespace:AddonWars2.App.ViewModels.Commands"
    xmlns:convert="clr-namespace:AddonWars2.App.Utils.Converters"
    xmlns:markupex="clr-namespace:AddonWars2.App.Extensions.Markup"
    xmlns:attached="clr-namespace:AddonWars2.App.Extensions.AttachedProperties"
    xmlns:assist="clr-namespace:AddonWars2.App.Extensions.Assists"
    xmlns:validation="clr-namespace:AddonWars2.App.Utils.Validation"
    xmlns:services="clr-namespace:AddonWars2.App.Services"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    mc:Ignorable="d" 
    Title="InstallAddonsPage"
    DataContext="{markupex:DISource Type=vm:InstallAddonsPageViewModel}"
    ShowsNavigationUI="False">

    <Page.Resources>
        <vm:BindingProxy x:Key="DataContextProxy" Data="{Binding}"/>
        <convert:EnumToStringConverter x:Key="EnumToStringConverter"/>
        <CollectionViewSource
            x:Key="ProvidersCollectionView"
            Source="{Binding ProvidersCollection}">
        </CollectionViewSource>
        <CollectionViewSource
            x:Key="AddonsCollectionView"
            Source="{Binding AddonInfoDataCollection}">
        </CollectionViewSource>
    </Page.Resources>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction  Command="{Binding Path=DataContext.GetProvidersListCommand, RelativeSource={RelativeSource AncestorType=Page}}"/>
            <i:ChangePropertyAction
                TargetObject="{Binding}"
                PropertyName="IsActuallyLoaded"
                Value="True"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="85"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="10"/>
            <ColumnDefinition Width="1.35*"/>
        </Grid.ColumnDefinitions>
        <Grid
            Grid.Row="1" Grid.Column="0"
            VerticalAlignment="Bottom">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <ComboBox
                x:Name="SelectProviderComboBox"
                Grid.Row="1"
                Margin="0,0,0,2"
                Height="20" Width="{Binding ElementName=AddonsListBorder, Path=ActualWidth}"
                IsTabStop="False"
                Cursor="Hand"
                Focusable="False"
                HorizontalAlignment="Center" HorizontalContentAlignment="Center"
                VerticalAlignment="Center" VerticalContentAlignment="Center"
                TextBlock.FontFamily="{DynamicResource Menomonia}"
                Background="{DynamicResource SolidColorBrush.PrimaryPalette.Level5}"
                BorderBrush="{DynamicResource SolidColorBrush.PrimaryPalette.Level1}"
                BorderThickness="1"
                assist:HintAssist.Hint="{DynamicResource S.InstallAddonsPage.AddonsList.SelectProviderComboBoxHint}"
                ItemsSource="{Binding Source={StaticResource ProvidersCollectionView}}"
                SelectedItem="{Binding Path=DataContext.SelectedProvider, RelativeSource={RelativeSource AncestorType=Page}, Mode=TwoWay}"
                Style="{StaticResource ComboBoxStyle}">
                <ComboBox.ToolTip>
                    <ToolTip>
                        <ToolTip.Style>
                            <Style TargetType="ToolTip">
                                <Setter Property="Content" Value="{DynamicResource S.ToolTip.ComboBox.AddonProviderSelection}"/>
                                <Setter Property="MaxWidth" Value="300"/>
                                <Style.Resources>
                                    <Style TargetType="ContentPresenter">
                                        <Style.Resources>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="TextWrapping" Value="Wrap"/>
                                            </Style>
                                        </Style.Resources>
                                    </Style>
                                </Style.Resources>
                            </Style>
                        </ToolTip.Style>
                    </ToolTip>
                </ComboBox.ToolTip>
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <Grid Height="20">
                            <Border
                                BorderBrush="{DynamicResource SolidColorBrush.PrimaryPalette.Level1}"
                                BorderThickness="0">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center">
                                        <Run Text="{Binding Path=Name, Mode=OneWay}"/>
                                        <Run Text="|"/>
                                        <Run Text="{Binding Path=TypeString, Mode=OneWay, StringFormat={}&lt;{0}&gt;}"/>
                                    </TextBlock>
                                </StackPanel>
                            </Border>
                        </Grid>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding Path=DataContext.GetAddonsFromProviderCommand, RelativeSource={RelativeSource AncestorType=Page}}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ComboBox>
        </Grid>
        <Border
            x:Name="AddonsListBorder"
            Grid.Row="2" Grid.Column="0"
            BorderBrush="{DynamicResource SolidColorBrush.PrimaryPalette.Level1}"
            BorderThickness="1"
            Focusable="False">
            <Border.Style>
                <Style TargetType="Border">
                    <Setter Property="Background">
                        <Setter.Value>
                            <SolidColorBrush Color="{DynamicResource Color.PrimaryPalette.Level5}" Opacity="0.9"/>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Border.Style>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Border
                    x:Name="SelectedProviderBorder"
                    Grid.Row="0"
                    Height="20"
                    Background="{DynamicResource SolidColorBrush.PrimaryPalette.Accent02}"
                    BorderBrush="{DynamicResource SolidColorBrush.PrimaryPalette.Level1}"
                    BorderThickness="0,0,0,1">
                    <StackPanel
                        Orientation="Horizontal">
                        <TextBlock
                            Margin="5,0,5,0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            FontFamily="{DynamicResource Menomonia}"
                            Foreground="{DynamicResource SolidColorBrush.PrimaryPalette.Level5}"
                            Text="{DynamicResource S.InstallAddonsPage.AddonsList.UsingProvider}"/>
                        <TextBlock
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            FontFamily="{DynamicResource Menomonia}"
                            Foreground="{DynamicResource SolidColorBrush.PrimaryPalette.Level5}">
                            <Run Text="{Binding Path=SelectedItem.Name, ElementName=SelectProviderComboBox, Mode=OneWay}"/>
                            <Run Text="|"/>
                            <Run Text="{Binding Path=SelectedItem.TypeString, ElementName=SelectProviderComboBox, Mode=OneWay, StringFormat={}&lt;{0}&gt;}"/>
                        </TextBlock>
                    </StackPanel>
                    <Border.Style>
                        <Style TargetType="Border">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=SelectedItem, ElementName=SelectProviderComboBox, Mode=OneWay}" Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                </Border>
                <ListBox
                    x:Name="AddonsList"
                    Grid.Row="1"
                    ItemsSource="{Binding Source={StaticResource AddonsCollectionView}}"
                    SelectedItem="{Binding DataContext.SelectedAddonInfoData, RelativeSource={RelativeSource AncestorType=Page}}"
                    IsSynchronizedWithCurrentItem="{x:Null}">
                    <!--<i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding Path=DataContext.LoadRssItemContentCommand, RelativeSource={RelativeSource AncestorType=Page}}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>-->
                    <ListBox.Template>
                        <ControlTemplate>
                            <ScrollViewer
                                x:Name="ScrollViewerControl"
                                CanContentScroll="True"
                                HorizontalScrollBarVisibility="Hidden"
                                VerticalScrollBarVisibility="Auto"
                                IsTabStop="False"
                                Focusable="False"
                                Style="{DynamicResource ScrollViewerStyle}">
                                <ItemsPresenter/>
                                <i:Interaction.Triggers>
                                    <i:DataTrigger Binding="{Binding Path=HasItems, ElementName=AddonsList}" Value="False">
                                        <i:CallMethodAction MethodName="ScrollToTop"/>
                                    </i:DataTrigger>
                                </i:Interaction.Triggers>
                            </ScrollViewer>
                        </ControlTemplate>
                    </ListBox.Template>
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel
                                Orientation="Vertical"
                                IsItemsHost="True"/>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid
                                x:Name="DataTemplateRootBorder"
                                Background="Transparent"
                                Width="{Binding Path=ViewportWidth, ElementName=ScrollViewerControl}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid.Resources>
                                    <Storyboard x:Key="AddonItemSlideInStoryboard">
                                        <DoubleAnimation
                                            From="0" To="1"
                                            BeginTime="00:00:00" Duration="00:00:0.3"
                                            Storyboard.TargetName="DataTemplateRootBorder"
                                            Storyboard.TargetProperty="Opacity">
                                        </DoubleAnimation>
                                        <DoubleAnimation
                                            From="100" To="0"
                                            FillBehavior="HoldEnd"
                                            BeginTime="00:00:00" Duration="00:00:0.3"
                                            AccelerationRatio="0.2" DecelerationRatio="0.1"
                                            Storyboard.TargetName="DataTemplateRootBorder"
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)">
                                            <DoubleAnimation.EasingFunction>
                                                <ExponentialEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </Grid.Resources>
                                <Grid.RenderTransform>
                                    <TranslateTransform/>
                                </Grid.RenderTransform>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Loaded" SourceObject="{Binding ElementName=DataTemplateRootBorder}">
                                        <i:ControlStoryboardAction Storyboard="{StaticResource AddonItemSlideInStoryboard}" ControlStoryboardOption="TogglePlayPause"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <Separator
                                    x:Name="ItemSeparator"
                                    Grid.Row="0"
                                    Margin="10,0,10,0"
                                    Height="0.5"
                                    Background="{DynamicResource SolidColorBrush.PrimaryPalette.Accent02}"
                                    SnapsToDevicePixels="True"
                                    IsHitTestVisible="False"
                                    Visibility="Visible">
                                    <Separator.OpacityMask>
                                        <LinearGradientBrush StartPoint="0.0,0.0" EndPoint="1.0,1.0">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStop Offset="0.00" Color="Transparent"/>
                                                <GradientStop Offset="0.20" Color="Black"/>
                                                <GradientStop Offset="0.80" Color="Black"/>
                                                <GradientStop Offset="1.00" Color="Transparent"/>
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>
                                    </Separator.OpacityMask>
                                </Separator>
                                <Grid
                                    x:Name="ItemRootGrid"
                                    Grid.Row="1"
                                    Margin="10,5.8,10,5.8">
                                    <!-- TODO: An ugly workaround to fit in items propertly. -->
                                    <Border x:Name="ItemRootBorder">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="*"/>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock
                                                x:Name="DisplayNameText"
                                                Grid.Row="0" Grid.Column="0"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Center"
                                                FontFamily="{DynamicResource Menomonia}"
                                                FontSize="16"
                                                FontWeight="Normal"
                                                Text="{Binding Data.DisplayName}"
                                                TextWrapping="NoWrap"
                                                IsHitTestVisible="False"/>
                                            <TextBlock
                                                x:Name="AuthorsText"
                                                Grid.Row="1" Grid.Column="0"
                                                Grid.ColumnSpan="2"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Center"
                                                FontFamily="{DynamicResource Menomonia}"
                                                FontSize="10"
                                                Foreground="{DynamicResource SolidColorBrush.PrimaryPalette.Level2}"
                                                Text="{Binding Data.Authors, StringFormat='{}by {0}'}"
                                                TextWrapping="NoWrap"
                                                IsHitTestVisible="False"/>
                                            <TextBlock
                                                x:Name="TooltipText"
                                                Grid.Row="2" Grid.Column="0"
                                                Grid.ColumnSpan="2"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Center"
                                                FontFamily="{DynamicResource Menomonia}"
                                                Foreground="{DynamicResource SolidColorBrush.PrimaryPalette.Level2}"
                                                Text="{Binding Data.Tooltip}"
                                                TextWrapping="NoWrap"
                                                IsHitTestVisible="False"/>
                                            <TextBlock
                                                x:Name="InstalledStatusText"
                                                Grid.Row="0" Grid.Column="1"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Center"
                                                FontFamily="{DynamicResource Menomonia}"
                                                FontWeight="Normal"
                                                TextWrapping="NoWrap"
                                                IsHitTestVisible="False">
                                            </TextBlock>
                                        </Grid>
                                    </Border>
                                </Grid>
                            </Grid>
                            <DataTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="False"/>
                                        <Condition Binding="{Binding ElementName=DataTemplateRootBorder, Path=IsMouseOver}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="DisplayNameText" Property="Foreground" Value="{DynamicResource SolidColorBrush.PrimaryPalette.Accent02}"/>
                                    <Setter TargetName="AuthorsText" Property="Foreground" Value="{DynamicResource SolidColorBrush.PrimaryPalette.Accent02}"/>
                                    <Setter TargetName="TooltipText" Property="Foreground" Value="{DynamicResource SolidColorBrush.PrimaryPalette.Accent02}"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="DisplayNameText" Property="Foreground" Value="{DynamicResource SolidColorBrush.PrimaryPalette.Accent01}"/>
                                    <Setter TargetName="AuthorsText" Property="Foreground" Value="{DynamicResource SolidColorBrush.PrimaryPalette.Accent01}"/>
                                    <Setter TargetName="TooltipText" Property="Foreground" Value="{DynamicResource SolidColorBrush.PrimaryPalette.Accent01}"/>
                                </MultiDataTrigger>
                                <DataTrigger Binding="{Binding ElementName=DataTemplateRootBorder, Path=IsMouseOver}" Value="True">
                                    <Setter Property="Cursor" Value="Hand"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource PreviousData}}" Value="{x:Null}">
                                    <Setter TargetName="ItemSeparator" Property="Visibility" Value="Hidden"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding InstalledStatusString, Mode=OneWay}" Value="Installed">
                                    <Setter TargetName="InstalledStatusText" Property="Text" Value="{DynamicResource S.InstallAddonsPage.AddonItems.InstalledStatus1}"/>
                                    <Setter TargetName="InstalledStatusText" Property="Foreground" Value="{DynamicResource SolidColorBrush.PrimaryPalette.Accent03}"/>
                                </DataTrigger>
                                <!--<DataTrigger Binding="{Binding InstalledStatusString, Mode=OneWay}" Value="NotInstalled">
                                    <Setter TargetName="InstalledStatusText" Property="Text" Value="{DynamicResource S.InstallAddonsPage.AddonItems.InstalledStatus2}"/>
                                    <Setter TargetName="InstalledStatusText" Property="Foreground" Value="{DynamicResource SolidColorBrush.PrimaryPalette.Accent01}"/>
                                </DataTrigger>-->
                                <DataTrigger Binding="{Binding InstalledStatusString, Mode=OneWay}" Value="Modified">
                                    <Setter TargetName="InstalledStatusText" Property="Text" Value="{DynamicResource S.InstallAddonsPage.AddonItems.InstalledStatus3}"/>
                                    <Setter TargetName="InstalledStatusText" Property="Foreground" Value="{DynamicResource SolidColorBrush.PrimaryPalette.Accent04}"/>
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="{x:Type ListBoxItem}">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                        <ContentPresenter/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.ItemContainerStyle>
                </ListBox>
                <Grid Grid.Row="1">
                    <TextBlock
                        VerticalAlignment="Center"
                        HorizontalAlignment="Center"
                        FontSize="16"
                        FontWeight="Light"
                        FontStyle="Normal"
                        FontFamily="{DynamicResource Menomonia}"
                        Foreground="{DynamicResource SolidColorBrush.PrimaryPalette.Level0}"
                        Text="{DynamicResource S.InstallAddonsPage.AddonsList.RequestingApprovedProvidersPlaceholder}">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="Visibility" Value="Hidden"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding DataContext.ViewModelState, RelativeSource={RelativeSource AncestorType=Page}, Converter={StaticResource EnumToStringConverter}}" Value="RequestingApprovedProviders">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                    <TextBlock
                        VerticalAlignment="Center"
                        HorizontalAlignment="Center"
                        FontSize="16"
                        FontWeight="Light"
                        FontStyle="Normal"
                        FontFamily="{DynamicResource Menomonia}"
                        Foreground="{DynamicResource SolidColorBrush.PrimaryPalette.Level0}"
                        Text="{DynamicResource S.InstallAddonsPage.AddonsList.LoadingAddonsListPlaceholder}">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="Visibility" Value="Hidden"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding DataContext.ViewModelState, RelativeSource={RelativeSource AncestorType=Page}, Converter={StaticResource EnumToStringConverter}}" Value="LoadingAddonsList">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                    <TextBlock
                        VerticalAlignment="Center"
                        HorizontalAlignment="Center"
                        FontSize="16"
                        FontWeight="Light"
                        FontStyle="Normal"
                        FontFamily="{DynamicResource Menomonia}"
                        Foreground="{DynamicResource SolidColorBrush.PrimaryPalette.Accent01}"
                        Text="{DynamicResource S.InstallAddonsPage.AddonsList.FailedToUpdateProvidersPlaceholder}">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="Visibility" Value="Hidden"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding DataContext.ViewModelState, RelativeSource={RelativeSource AncestorType=Page}, Converter={StaticResource EnumToStringConverter}}" Value="FailedToLoadProviders">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                    <TextBlock
                        VerticalAlignment="Center"
                        HorizontalAlignment="Center"
                        FontSize="16"
                        FontWeight="Light"
                        FontStyle="Normal"
                        FontFamily="{DynamicResource Menomonia}"
                        Foreground="{DynamicResource SolidColorBrush.PrimaryPalette.Accent01}"
                        Text="{DynamicResource S.InstallAddonsPage.AddonsList.FailedToUpdateAddonsPlaceholder}">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="Visibility" Value="Hidden"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding DataContext.ViewModelState, RelativeSource={RelativeSource AncestorType=Page}, Converter={StaticResource EnumToStringConverter}}" Value="FailedToLoadAddons">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Grid>
            </Grid>
        </Border>
        <TextBlock
            x:Name="SelectedAddonDescHeaderText"
            Grid.Row="1" Grid.Column="2"
            Margin="0,0,0,2"
            VerticalAlignment="Bottom"
            FontWeight="Light"
            FontStyle="Normal"
            FontSize="16"
            FontFamily="{DynamicResource Menomonia}"
            Text="{DynamicResource S.InstallAddonsPage.AddonDesc.Header}">
            <TextBlock.Style>
                <Style TargetType="TextBlock">
                    <Setter Property="Visibility" Value="Visible"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=DataContext.SelectedAddonInfoData, RelativeSource={RelativeSource AncestorType=Page}}" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Hidden"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>
        <Border
            x:Name="SelectedAddonDescBorder"
            Grid.Row="2" Grid.Column="2"
            BorderBrush="{DynamicResource SolidColorBrush.PrimaryPalette.Level1}"
            BorderThickness="1"
            SnapsToDevicePixels="True"
            Focusable="False">
            <Border.Style>
                <Style TargetType="Border">
                    <Setter Property="Visibility" Value="Visible"/>
                    <Setter Property="Background">
                        <Setter.Value>
                            <SolidColorBrush Color="{DynamicResource Color.PrimaryPalette.Level5}" Opacity="0.9"/>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=DataContext.SelectedAddonInfoData, RelativeSource={RelativeSource AncestorType=Page}}" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Hidden"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <ScrollViewer
                HorizontalScrollBarVisibility="Disabled"
                VerticalScrollBarVisibility="Visible"
                Style="{StaticResource ScrollViewerStyle}">
                <Grid Margin="5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="10"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock
                        Grid.Row="0" Grid.Column="0"
                        Grid.ColumnSpan="3"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top"
                        Foreground="{DynamicResource SolidColorBrush.PrimaryPalette.Level0}"
                        Text="{Binding Path=DataContext.SelectedAddonDescription, RelativeSource={RelativeSource AncestorType=Page}, Mode=OneWay}"
                        TextWrapping="Wrap"/>
                    <TextBlock
                        Grid.Row="1" Grid.Column="0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top"/>
                    <TextBlock
                        Grid.Row="2" Grid.Column="0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top"
                        Foreground="{DynamicResource SolidColorBrush.PrimaryPalette.Level0}"
                        Text="{DynamicResource S.InstallAddonsPage.AddonDesc.Content.Website}"
                        TextWrapping="NoWrap"/>
                    <TextBlock
                        Grid.Row="2" Grid.Column="2"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top"
                        Foreground="{DynamicResource SolidColorBrush.PrimaryPalette.Level0}"
                        TextWrapping="Wrap">
                    <Hyperlink
                        NavigateUri="{Binding Path=DataContext.SelectedAddonInfoData.Data.Website, RelativeSource={RelativeSource AncestorType=Page}}"
                        TextDecorations="None"
                        FocusVisualStyle="{x:Null}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="RequestNavigate">
                            <i:InvokeCommandAction
                                Command="{Binding Path=DataContext.CommonCommands.OpenUrlCommand, RelativeSource={RelativeSource AncestorType=Page}}"
                                PassEventArgsToCommand="True"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <TextBlock Text="{Binding Path=DataContext.SelectedAddonInfoData.Data.Website, RelativeSource={RelativeSource AncestorType=Page}}"/>
                    </Hyperlink>
                </TextBlock>
                    <TextBlock
                        Grid.Row="4" Grid.Column="0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top"
                        Foreground="{DynamicResource SolidColorBrush.PrimaryPalette.Level0}"
                        Text="{DynamicResource S.InstallAddonsPage.AddonDesc.Content.Authors}"
                        TextWrapping="NoWrap"/>
                    <TextBlock
                        Grid.Row="4" Grid.Column="2"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top"
                        Foreground="{DynamicResource SolidColorBrush.PrimaryPalette.Level0}"
                        Text="{Binding Path=DataContext.SelectedAddonAuthors, RelativeSource={RelativeSource AncestorType=Page}, Mode=OneWay}"
                        TextWrapping="Wrap"/>
                    <TextBlock
                        Grid.Row="5" Grid.Column="0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top"
                        Foreground="{DynamicResource SolidColorBrush.PrimaryPalette.Level0}"
                        Text="{DynamicResource S.InstallAddonsPage.AddonDesc.Content.Required}"
                        TextWrapping="NoWrap"/>
                    <TextBlock
                        Grid.Row="5" Grid.Column="2"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top"
                        Foreground="{DynamicResource SolidColorBrush.PrimaryPalette.Level0}"
                        Text="{Binding Path=DataContext.SelectedAddonRequired, RelativeSource={RelativeSource AncestorType=Page}, Mode=OneWay}"
                        TextWrapping="Wrap"/>
                    <TextBlock
                        Grid.Row="6" Grid.Column="0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top"
                        Foreground="{DynamicResource SolidColorBrush.PrimaryPalette.Level0}"
                        Text="{DynamicResource S.InstallAddonsPage.AddonDesc.Content.Conflicts}"
                        TextWrapping="NoWrap"/>
                    <TextBlock
                        Grid.Row="6" Grid.Column="2"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top"
                        Foreground="{DynamicResource SolidColorBrush.PrimaryPalette.Level0}"
                        Text="{Binding Path=DataContext.SelectedAddonConflicts, RelativeSource={RelativeSource AncestorType=Page}, Mode=OneWay}"
                        TextWrapping="Wrap"/>
                </Grid>
            </ScrollViewer>
        </Border>
    </Grid>
    
</Page>
