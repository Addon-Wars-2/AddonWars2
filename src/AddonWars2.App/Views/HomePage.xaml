<Page 
    x:Class="AddonWars2.App.Views.HomePage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:local="clr-namespace:AddonWars2.App.Views"
    xmlns:vm="clr-namespace:AddonWars2.App.ViewModels"
    xmlns:cmd="clr-namespace:AddonWars2.App.ViewModels.Commands"
    xmlns:convert="clr-namespace:AddonWars2.App.Utils.Converters"
    xmlns:markupex="clr-namespace:AddonWars2.App.Extensions.Markup"
    xmlns:attached="clr-namespace:AddonWars2.App.Extensions.AttachedProperties"
    xmlns:assist="clr-namespace:AddonWars2.App.Extensions.Assists"
    xmlns:behaviors="clr-namespace:AddonWars2.App.Extensions.Behaviors"
    xmlns:services="clr-namespace:AddonWars2.App.UIServices"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    mc:Ignorable="d"
    DataContext="{markupex:DISource Type=vm:HomePageViewModel}"
    assist:DialogAssist.DialogService="{markupex:DISource Type=services:DialogService}"
    Title="HomePage"
    ShowsNavigationUI="False">

    <Page.Resources>
        <vm:BindingProxy x:Key="DataContextProxy" Data="{Binding}"/>
        <CollectionViewSource
            x:Key="InstalledAddonsCollectionView"
            Source="{Binding InstalledAddonsCollection}">
            <CollectionViewSource.SortDescriptions>
                <scm:SortDescription PropertyName="Name"/>
            </CollectionViewSource.SortDescriptions>
    </CollectionViewSource>
    </Page.Resources>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction  Command="{Binding Path=DataContext.TryFindGw2ExeCommand, RelativeSource={RelativeSource AncestorType=Page}}"/>
            <i:ChangePropertyAction
                TargetObject="{Binding}"
                PropertyName="IsActuallyLoaded"
                Value="True"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="85"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="10"/>
            <ColumnDefinition Width="1.35*"/>
        </Grid.ColumnDefinitions>
        <Grid Grid.Row="1" Grid.Column="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <TextBlock
                x:Name="InstalledAddonsListHeaderText"
                Grid.Column="0"
                Margin="0,0,0,2"
                VerticalAlignment="Bottom"
                FontWeight="Light"
                FontStyle="Normal"
                FontSize="16"
                FontFamily="{DynamicResource Menomonia}"
                Text="{DynamicResource S.HomePage.AddonsList.Header}"/>
            <Button
                x:Name="AddAddonButton"
                Grid.Column="1"
                Margin="0,0,0,2"
                Padding="2"
                HorizontalAlignment="Right"
                VerticalAlignment="Bottom"
                Height="16"
                Cursor="Hand"
                Focusable="False"
                Content="{DynamicResource Path.Icon.Add}"
                BorderBrush="{DynamicResource SolidColorBrush.PrimaryPalette.Level1}"
                BorderThickness="1"
                Background="{DynamicResource LinearGradient.PrimaryPalette.Level4to5}"
                Command="{Binding Path=SwitchToInstallAddonsTabCommand, RelativeSource={RelativeSource AncestorType=Page}}"
                ToolTip="{DynamicResource S.ToolTip.Button.InstallAddons}">
                <Button.CommandParameter>
                    <!-- REPLACE THE TAB INDEX WHEN ADD OR REARRANGE TABS -->
                    <!-- TODO: Refactor this ugly workaround. -->
                    <sys:Int32>1</sys:Int32>
                </Button.CommandParameter>
            </Button>
        </Grid>
        <Border
            x:Name="InstalledAddonsListBorder"
            Grid.Row="2" Grid.Column="0"
            BorderBrush="{DynamicResource SolidColorBrush.PrimaryPalette.Level1}"
            BorderThickness="1"
            SnapsToDevicePixels="True"
            Focusable="False">
            <Border.Style>
                <Style TargetType="Border">
                    <Setter Property="Background">
                        <Setter.Value>
                            <SolidColorBrush Color="{DynamicResource Color.PrimaryPalette.Level5}" Opacity="0.9"/>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Border.Style>
            <Grid>
                <ListBox
                    x:Name="InstalledAddonsList"
                    ItemsSource="{Binding Source={StaticResource InstalledAddonsCollectionView}}"
                    SelectedItem="{Binding DataContext.SelectedAddon, RelativeSource={RelativeSource AncestorType=Page}}"
                    IsSynchronizedWithCurrentItem="{x:Null}">
                    <ListBox.Template>
                        <ControlTemplate>
                            <ScrollViewer
                                x:Name="ScrollViewerControl"
                                CanContentScroll="True"
                                HorizontalScrollBarVisibility="Hidden"
                                VerticalScrollBarVisibility="Auto"
                                IsTabStop="False"
                                Focusable="False"
                                Style="{DynamicResource ScrollViewerStyle}">
                                <ItemsPresenter/>
                                <i:Interaction.Triggers>
                                    <i:DataTrigger Binding="{Binding Path=HasItems, ElementName=InstalledAddonsList}" Value="False">
                                        <i:CallMethodAction MethodName="ScrollToTop"/>
                                    </i:DataTrigger>
                                </i:Interaction.Triggers>
                            </ScrollViewer>
                        </ControlTemplate>
                    </ListBox.Template>
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel
                                Orientation="Vertical"
                                IsItemsHost="True"/>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid
                                x:Name="DataTemplateRootBorder"
                                Background="Transparent"
                                Width="{Binding Path=ViewportWidth, ElementName=ScrollViewerControl}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Separator
                                    x:Name="ItemSeparator"
                                    Grid.Row="0"
                                    Margin="10,0,10,0"
                                    Height="0.5"
                                    Background="{DynamicResource SolidColorBrush.PrimaryPalette.Accent02}"
                                    SnapsToDevicePixels="True"
                                    IsHitTestVisible="False">
                                    <Separator.OpacityMask>
                                        <LinearGradientBrush StartPoint="0.0,0.0" EndPoint="1.0,1.0">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStop Offset="0.00" Color="Transparent"/>
                                                <GradientStop Offset="0.20" Color="Black"/>
                                                <GradientStop Offset="0.80" Color="Black"/>
                                                <GradientStop Offset="1.00" Color="Transparent"/>
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>
                                    </Separator.OpacityMask>
                                </Separator>
                                <Grid
                                    x:Name="ItemRootGrid"
                                    Grid.Row="1"
                                    Margin="10,5.8,0,5.8">  <!-- TODO: An ugly workaround to fit in items propertly. -->
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Border
                                        x:Name="ItemRootBorder"
                                        Grid.Column="0">
                                        <TextBlock
                                            x:Name="NameText"
                                            Margin="0,0,0,0"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Center"
                                            FontFamily="{DynamicResource Menomonia}"
                                            Text="{Binding Name}"
                                            TextWrapping="NoWrap"
                                            IsHitTestVisible="False">
                                        </TextBlock>
                                    </Border>
                                </Grid>
                            </Grid>
                            <DataTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="False"/>
                                        <Condition Binding="{Binding ElementName=DataTemplateRootBorder, Path=IsMouseOver}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="NameText" Property="Foreground" Value="{DynamicResource SolidColorBrush.PrimaryPalette.Accent02}"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="NameText" Property="Foreground" Value="{DynamicResource SolidColorBrush.PrimaryPalette.Accent01}"/>
                                </MultiDataTrigger>
                                <DataTrigger Binding="{Binding ElementName=DataTemplateRootBorder, Path=IsMouseOver}" Value="True">
                                    <Setter Property="Cursor" Value="Hand"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource PreviousData}}" Value="{x:Null}">
                                    <Setter TargetName="ItemSeparator" Property="Visibility" Value="Hidden"/>
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="{x:Type ListBoxItem}">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                        <ContentPresenter/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.ItemContainerStyle>
                </ListBox>
                <TextBlock
                    VerticalAlignment="Center"
                    HorizontalAlignment="Center"
                    FontSize="16"
                    FontWeight="Light"
                    FontFamily="{DynamicResource Menomonia}"
                    Foreground="{DynamicResource SolidColorBrush.PrimaryPalette.Level0}"
                    Text="{DynamicResource S.HomePage.AddonsList.NoInstalledAddonsFound}">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Setter Property="Visibility" Value="Hidden"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=HasItems, ElementName=InstalledAddonsList}" Value="False">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </Grid>
        </Border>
        <TextBlock
            x:Name="InstalledAddonDescHeaderText"
            Grid.Row="1" Grid.Column="2"
            Margin="0,0,0,2"
            VerticalAlignment="Bottom"
            FontWeight="Light"
            FontStyle="Normal"
            FontSize="16"
            FontFamily="{DynamicResource Menomonia}"
            Text="{DynamicResource S.HomePage.AddonDesc.Header}">
            <TextBlock.Style>
                <Style TargetType="TextBlock">
                    <Setter Property="Visibility" Value="Visible"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=DataContext.SelectedAddon, RelativeSource={RelativeSource AncestorType=Page}}" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Hidden"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>
        <Border
            x:Name="InstalledAddonDescBorder"
            Grid.Row="2" Grid.Column="2"
            BorderBrush="{DynamicResource SolidColorBrush.PrimaryPalette.Level1}"
            BorderThickness="1"
            SnapsToDevicePixels="True"
            Focusable="False">
            <Border.Style>
                <Style TargetType="Border">
                    <Setter Property="Visibility" Value="Visible"/>
                    <Setter Property="Background">
                        <Setter.Value>
                            <SolidColorBrush Color="{DynamicResource Color.PrimaryPalette.Level5}" Opacity="0.9"/>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=DataContext.SelectedAddon, RelativeSource={RelativeSource AncestorType=Page}}" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Hidden"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
        </Border>
        <Grid
            x:Name="Gw2ExeSelec"
            Grid.Row="3" Grid.Column="0"
            Grid.ColumnSpan="3"
            Margin="0,10,0,20">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <TextBox
                x:Name="GW2ExecTextBox"
                Grid.Row="1" Grid.Column="0"
                Width="500" Height="30"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Focusable="True"
                IsTabStop="False"
                IsReadOnly="False"
                assist:HintAssist.Hint="{StaticResource S.Controls.TextBox.SelectGW2ExePlaceholder}"
                Style="{DynamicResource TextBoxStyle}"
                Text="{Binding Path=DataContext.Gw2ExecPath, RelativeSource={RelativeSource AncestorType=Page}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <!--
                TODO: Find out the root of the problem and why this workaround works.
                This is a stupid workaround (need to test though) to resolve Error Template visual problem (idk why it works).
                It turned out that for some reason if validation passed, only the text error is removed, but not the red border.
                Switching between tabs doesn't help, neither playing around with Loaded event and binding.
                Somehow forcing the text box to update its layout again WHEN THERE ARE ERRORS resolved the issue.
                Maybe there is a problem with adorner layers. Maybe there is some racing inside the framework. Maybe I'm just missing something (likely).
                -->
                <i:Interaction.Triggers>
                    <i:DataTrigger Binding="{Binding ElementName=GW2ExecTextBox, Mode=OneWay, Path=(Validation.HasError)}" Value="True">
                        <i:CallMethodAction MethodName="UpdateLayout" TargetObject="{Binding ElementName=GW2ExecTextBox}"/>
                    </i:DataTrigger>
                </i:Interaction.Triggers>
                <i:Interaction.Behaviors>
                    <behaviors:UIElementRemoveFocusBehavior/>
                </i:Interaction.Behaviors>
            </TextBox>
            <Button
                x:Name="SelectButton"
                Grid.Row="1" Grid.Column="1"
                Margin="10,0,0,0"
                Height="30"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Focusable="False"
                IsTabStop="False"
                Cursor="Hand"
                BorderBrush="{DynamicResource SolidColorBrush.PrimaryPalette.Level3}"
                BorderThickness="1"
                Background="{DynamicResource LinearGradient.PrimaryPalette.Level4to5}"
                attached:AccentColorExtension.AccentColor="{DynamicResource LinearGradient.PrimaryPalette.Accent02to02a}"
                Style="{DynamicResource MajorButtonAccentBackgroundStyle}"
                ToolTip="{DynamicResource S.ToolTip.Button.SelectGw2Path}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <i:InvokeCommandAction
                            Command="{Binding OpenFileDialogCommand, RelativeSource={RelativeSource AncestorType=Page}}"/>
                        <i:InvokeCommandAction
                            Command="{Binding Path=DataContext.UpdateGw2ExePathCommand, RelativeSource={RelativeSource AncestorType=Page}}"
                            CommandParameter="{Binding Path=(assist:DialogAssist.SelectedPaths), RelativeSource={RelativeSource AncestorType=Page}}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <Button.Content>
                    <TextBlock
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        FontSize="16"
                        FontWeight="Bold"
                        Text="{DynamicResource S.HomePage.GameLocation.SelectButton}">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="Foreground" Value="{DynamicResource SolidColorBrush.PrimaryPalette.Level1}"/>
                                <Setter Property="FontFamily" Value="{DynamicResource Menomonia}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType=Button}}" Value="True">
                                        <Setter Property="Foreground" Value="{DynamicResource SolidColorBrush.PrimaryPalette.Level4}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Button.Content>
            </Button>
        </Grid>
    </Grid>

</Page>
